import java.util.regex.Matcher
import java.util.regex.Pattern

// 作为 Android 库的依赖， kotlin 编译必须使用 kotlin-android 插件
plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android{
    compileSdk = 30

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions("Environment")
    productFlavors {

        create("EnvT") { //测试环境
            dimension = "Environment"
        }
        create("EnvP") { //生产环境
            dimension = "Environment"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation('com.squareup.okhttp3:logging-interceptor:4.2.1')
}

def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
    Pattern pattern
    println("tskReqStr: " + tskReqStr)
    if (tskReqStr.contains("assemble")) {
        pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    } else {
        pattern = Pattern.compile("generate(\\w+)(Release|Debug)")
    }
    Matcher matcher = pattern.matcher(tskReqStr)
    if (matcher.find())
        return matcher.group(1)
    else {
        println "NO MATCH FOUND"
        return ""
    }
}

println "当前的 flavor == ${getCurrentFlavor()}"